# Nginx Configuration for Telogical Chatbot
# Copy this file to /etc/nginx/sites-available/telogical
# Then: sudo ln -s /etc/nginx/sites-available/telogical /etc/nginx/sites-enabled/
# Replace 'yourdomain.com' with your actual domain name

# Frontend (Main Domain)
server {
    listen 80;
    server_name yourdomain.com www.yourdomain.com;

    # Redirect HTTP to HTTPS (will be configured by certbot)
    # return 301 https://$server_name$request_uri;

    # For initial setup before SSL, proxy directly to frontend
    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        
        # Enable compression
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
}

# Backend API (Subdomain)
server {
    listen 80;
    server_name api.yourdomain.com;

    # Redirect HTTP to HTTPS (will be configured by certbot)
    # return 301 https://$server_name$request_uri;

    # For initial setup before SSL, proxy directly to backend
    location / {
        proxy_pass http://localhost:8081;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_read_timeout 86400;
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;

        # CORS headers for API
        add_header Access-Control-Allow-Origin "https://yourdomain.com" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
        add_header Access-Control-Allow-Credentials "true" always;

        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "https://yourdomain.com";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
            add_header Access-Control-Allow-Credentials "true";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }

    # Health check endpoint
    location /health {
        proxy_pass http://localhost:8081/health;
        access_log off;
    }

    # Security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
}

# SSL Configuration (will be added by certbot)
# After running: sudo certbot --nginx -d yourdomain.com -d www.yourdomain.com -d api.yourdomain.com

# Rate limiting
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

# Apply rate limiting to API endpoints
location /api/ {
    limit_req zone=api burst=20 nodelay;
    proxy_pass http://localhost:8081;
    # ... other proxy settings
}

# Apply stricter rate limiting to auth endpoints
location /api/auth/ {
    limit_req zone=login burst=5 nodelay;
    proxy_pass http://localhost:3000;
    # ... other proxy settings
}

# Additional security measures
server_tokens off;  # Hide nginx version
client_max_body_size 10M;  # Limit upload size
client_body_timeout 60s;
client_header_timeout 60s;