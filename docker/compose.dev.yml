services:
  # Backend service
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
    ports:
      - "8081:8081"
    env_file: ../.env  # Use the project's .env file directly
    environment:
      - HOST=0.0.0.0
      - PORT=8081
      # Database configuration - using Postgres as specified
      - DATABASE_TYPE=postgres
    volumes:
      - ../backend:/app/backend
      - ../data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  # Frontend service in development mode
  frontend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.frontend.dev
    ports:
      - "3000:3000"
    environment:
      - NEXTAUTH_SECRET="4hSUkYr9kcpJx0Zl2DnC6bVXzDUyDTsOOGtM8SpZj7E="
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - USE_TELOGICAL_BACKEND=true
      - TELOGICAL_API_URL=http://backend:8081
      - POSTGRES_URL=postgres://citus:1stAsTradgedyThenAsFarce@c-telogical-postgresql-eus.7n7rqafletob6o.postgres.cosmos.azure.com:5432/citus
      - SKIP_DB_MIGRATION=true
      - SKIP_AUTH_SETUP=true
      - NODE_OPTIONS=--openssl-legacy-provider
    volumes:
      - ../frontend:/app
      - frontend_node_modules:/app/node_modules
    depends_on:
      backend:
        condition: service_healthy

volumes:
  frontend_node_modules: